name: Auth-api dev
on: 
  push:
    branches:
      - 'dev'
    paths:
      - 'backend/auth-api/**'
  workflow_dispatch:
jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: node:14-alpine
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        working-directory: ./backend/auth-api/
        run: npm ci
      - name: Test code
        working-directory: ./backend/auth-api/
        run: npm test
  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      sha_short: ${{ steps.vars.outputs.sha_short }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set short git commit SHA
        id: vars
        run: |
          echo "sha_short=$(git rev-parse --short ${{ github.sha }})" >> $GITHUB_OUTPUT
      - name: Build and push (auth-api)
        uses: docker/build-push-action@v3
        with:
          context: ./backend/auth-api/
          file: ./backend/auth-api/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/insta-auth-api:${{ steps.vars.outputs.sha_short }}
          cache-from: type=gha
          cache-to: type=gha, mode=max
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          repository: yeongbin-hwang/gitops-repo
          ref: dev
          token: ${{ secrets.TOKEN_GITHUB}}
      - name: Setup Kustomize
        uses: imranismail/setup-kustomize@v1
        with:
          kustomize-version: "3.6.1"
      - name: Kubernetes resources update
        run: |
          cd manifests/auth-api
          kustomize edit set image ${{ secrets.DOCKER_HUB_USERNAME }}/insta-auth-api:${{ needs.build.outputs.sha_short }}
          kustomize build . -o ../../k8s/auth-api/deployment.yaml
          echo "origin kustomization.yaml "
          cat kustomization.yaml 
          echo "updated deployment.yaml "
          cat ../../k8s/auth-api/deployment.yaml
      - name: Commit & Push
        run: |
          git config --local user.email "kyh3565800@kaist.ac.kr"
          git config --local user.name "yeongbin-hwang"
          git commit -am "docker image build and update k8s resources - ${{ needs.build.outputs.sha_short }}"
          git push -u origin dev
